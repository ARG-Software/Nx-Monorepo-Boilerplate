services:
  nx-template-redis:
    container_name: nx-template-redis
    image: redis:latest
    command: redis-server
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - nx-template

  nx-template-database:
    container_name: nx-template-database
    image: postgres:15
    restart: unless-stopped
    env_file:
      - .env.infra
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - database-data:/data
    networks:
      - nx-template

  nx-template-pgadmin:
    container_name: nx-template-pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - 5050:80
    env_file:
      - .env.infra
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    networks:
      - nx-template

  nx-template-zookeeper:
    container_name: nx-template-zookeeper
    image: confluentinc/cp-zookeeper:7.6.1
    ports:
      - '2181:2181'
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - zookeeper-data:/data
      - zookeeper-log:/data
    networks:
      - nx-template

  nx-template-kafka:
    container_name: nx-template-kafka
    image: confluentinc/cp-kafka:7.6.1
    ports:
      - '9092:9092'
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://nx-template-kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'nx-template-zookeeper:2181'
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
    depends_on:
      nx-template-zookeeper:
        condition: service_healthy
    volumes:
      - kafka-data:/data
    networks:
      - nx-template

  nx-template-redpanda:
    container_name: nx-template-redpanda
    depends_on:
      - nx-template-kafka
    image: docker.redpanda.com/vectorized/console
    restart: always
    environment:
      - KAFKA_BROKERS=nx-template-kafka:19092
    ports:
      - 8080:8080
    networks:
      - nx-template

  nx-template-logs-database:
    container_name: nx-template-logs-database
    image: postgres:15
    restart: unless-stopped
    env_file:
      - .env.infra
    ports:
      - ${LOGS_DATABASE_PORT}:5432
    environment:
      POSTGRES_DB: ${LOGS_DATABASE_NAME}
      POSTGRES_USER: ${LOGS_DATABASE_USER}
      POSTGRES_PASSWORD: ${LOGS_DATABASE_PASSWORD}
    volumes:
      - logs-data:/data
    networks:
      - nx-template

networks:
  nx-template:
    name: nx-template
    driver: bridge
volumes:
  zookeeper-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${VOLUME_DEVICE_PATH}/zookeeper-data
  zookeeper-log:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${VOLUME_DEVICE_PATH}/zookeeper-log
  kafka-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DEVICE_PATH}/kafka-data
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DEVICE_PATH}/redis-data
  database-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DEVICE_PATH}/database-data
  logs-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DEVICE_PATH}/logs-data
